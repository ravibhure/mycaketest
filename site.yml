---
# ansible-playbook site.yml -e "my_aws_access_key=xxxxxxxxxxxxxxxxxxxx my_aws_secret_key=xxxxxxxxxxxxxxxxxxx"
  - name: Provision an EC2 Instance
    hosts: localhost
    connection: local
    gather_facts: False
    tags: provisioning
    # Necessary Variables for creating/provisioning the EC2 Instance
    vars:
      instance_type: t2.micro
      security_group: webserver # Change the security group name here
      image: ami-d94f5aa0 # Change the AMI, from which you want to launch the server
      vpc_id: vpc-cc79c8aa
      vpc_subnet_id: subnet-af960af4
      region: us-west-2 # Change the Region
      keypair: ravi # Change the keypair name
      count: 1
      tag_name: webserver

    # Task that will be used to Launch/Create an EC2 Instance
    tasks:

      - name: Create a security group
        local_action: 
          module: ec2_group
          name: "{{ security_group }}"
          description: Security Group for webserver Servers
          region: "{{ region }}"
          vpc_id: "{{ vpc_id }}"
          aws_access_key: "{{ my_aws_access_key }}"
          aws_secret_key: "{{ my_aws_secret_key }}"
          rules:
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 80
              to_port: 80
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 8080
              to_port: 8080
              cidr_ip: 0.0.0.0/0
          rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0

      - name: Launch the new EC2 Instance
        local_action:
          module: ec2
          group: "{{ security_group }}"
          aws_access_key: "{{ my_aws_access_key }}"
          aws_secret_key: "{{ my_aws_secret_key }}"
          instance_type: "{{ instance_type}}"
          image: "{{ image }}"
          vpc_subnet_id: "{{ vpc_subnet_id }}"
          wait: true
          region: "{{ region }}"
          keypair: "{{ keypair }}"
          count: "{{count}}"
          assign_public_ip: yes
          instance_tags:
            Name: "{{tag_name}}"
        register: ec2

      - name: Add the newly created EC2 instance(s) to the local host group (located inside the directory)
        add_host:
          hostname: "{{ item.public_ip }}"
          ansible_user: "ubuntu"
          groups: "webserver"
        with_items: "{{ ec2.instances }}"

      - name: Add the newly created EC2 instance(s) to the local host group (located inside the directory)
        local_action:
          module: lineinfile 
          dest: "./hosts" 
          regexp: "{{ item.public_ip }}"
          insertafter: "[webserver]"
          line: "{{ item.public_ip }}"
          with_items: "{{ ec2.instances }}"

      - name: Add tag to Instance(s)
        local_action: 
          module: ec2_tag
          aws_access_key: "{{ my_aws_access_key }}"
          aws_secret_key: "{{ my_aws_secret_key }}"
          resource: "{{web_sg.group_id}}"
          region: "{{ region }}"
          state: present
          tags:
            Name: "{{ security_group }}"

      - name: Wait for SSH to come up
        local_action:
          module: wait_for 
          host: "{{ item.public_ip }}"
          port: 22 
          delay: 20
          timeout: 320
          state: started
          with_items: "{{ ec2.instances }}"

  - hosts: webserver              # define 'docker' as our action target
    become: yes
    become_method: sudo
    serial: 1          #define the action will be done one by one
    roles:
    - role: common     #define 'common' role should be apply to hosts
    - role: docker     #define 'docker' role should be apply to hosts
    - role: monitoring       #define 'monitoring' role should be apply to hosts
    - role: wordpress       #define 'monitoring' role should be apply to hosts
